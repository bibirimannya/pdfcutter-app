{% extends "base.html" %}

{% block title %}PDF結合 - 複数PDFを1つに結合 | PDFCUTTER{% endblock %}
{% block description %}複数のPDFファイルを1つに結合できる無料ツール。ドラッグ&ドロップで簡単操作。登録不要で安全・高速処理。{% endblock %}

{% block content %}
<div class="container">
    <!-- ローディング表示を追加 -->
    <div id="loading" class="loading hidden">
        <div class="loading-content">
            <i class="fas fa-spinner fa-spin"></i>
            <p>処理中...</p>
        </div>
    </div>

    <div class="hero-section">
        <h1 class="page-title">PDF結合</h1>
        <p class="page-subtitle">複数のPDFファイルを1つにまとめる</p>
    </div>

    <div class="tool-container">
        <div class="upload-section">
            <div class="file-drop-zone" id="dropZone">
                <div class="drop-content">
                    <i class="fas fa-cloud-upload-alt"></i>
                    <h3>PDFファイルをここにドロップ</h3>
                    <p>または下のボタンからファイルを選択</p>
                    <button type="button" class="select-files-btn" id="selectFilesBtn">
                        <i class="fas fa-folder-open"></i>
                        ファイルを選択
                    </button>
                </div>
                <input type="file" id="fileInput" accept=".pdf" multiple style="display: none;">
            </div>
        </div>

        <div class="files-section" id="filesSection" style="display: none;">
            <div class="section-header">
                <h3>選択されたファイル</h3>
                <p class="file-count">0個のファイル</p>
            </div>
            <div class="file-list" id="fileList"></div>
            <div class="action-buttons">
                <button type="button" class="clear-btn" id="clearBtn">
                    <i class="fas fa-trash"></i>
                    すべてクリア
                </button>
                <button type="button" class="merge-btn" id="mergeBtn">
                    <i class="fas fa-compress"></i>
                    PDFを結合する
                </button>
            </div>
        </div>

        <div class="result-section" id="resultSection" style="display: none;">
            <div class="result-content" id="resultContent"></div>
        </div>
    </div>

    <div class="info-section">
        <div class="info-grid">
            <div class="info-card">
                <i class="fas fa-shield-alt"></i>
                <h4>安全・プライベート</h4>
                <p>ファイルは処理後自動削除。サーバーに保存されません。</p>
            </div>
            <div class="info-card">
                <i class="fas fa-bolt"></i>
                <h4>高速処理</h4>
                <p>最新技術により、大容量ファイルも高速で処理します。</p>
            </div>
            <div class="info-card">
                <i class="fas fa-mobile-alt"></i>
                <h4>全デバイス対応</h4>
                <p>PC、スマホ、タブレットどこからでもご利用いただけます。</p>
            </div>
        </div>
    </div>
</div>
    <!-- 共通JavaScript（読み込み順序重要） -->
    <script src="{{ url_for('static', filename='js/common.js') }}"></script>
    <script src="{{ url_for('static', filename='js/fileHandler.js') }}"></script>
    <script src="{{ url_for('static', filename='js/merge.js') }}"></script>
    
    <!-- ページ固有の初期化スクリプト（ここに追加） -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Merge page DOM loaded');
        
        // インスタンス作成
        const fileHandler = new FileHandler(window.pdfProcessor);
        const merger = new PDFMerger(window.pdfProcessor, fileHandler);
        
        // グローバルアクセス用（HTMLのonclick属性で使用）
        window.fileHandler = fileHandler;
        window.merger = merger;
        
        // UIイベントの追加監視（結合ボタンの有効/無効切り替え用）
        const observer = new MutationObserver(() => {
            merger.updateMergeButton();
        });
        
        const filesSection = document.getElementById('filesSection');
        if (filesSection) {
            observer.observe(filesSection, { childList: true, subtree: true });
        }
    });
    </script>
{% endblock %}